{"version":3,"sources":["redux/actions/index.js","components/ListTitle.js","redux/actions/listsActions.js","components/Modal.js","redux/actions/todosActions.js","components/Todo.js","components/CreateNew.js","components/AddNew.js","components/List.js","components/App.js","reportWebVitals.js","redux/reducers/reducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["CONSTANTS","ADD_TODO","ADD_LIST","DRAG_OCCURED","EDIT_LIST_TITLE","DELETE_LIST","EDIT_TODO","DELETE_TODO","connect","title","listId","dispatch","classes","useStyle","useState","edit","setEdit","newTitle","setNewTitle","Fragment","InputBase","value","onChange","e","target","onBlur","type","payload","editListTitle","inputProps","className","input","autoFocus","fullWidth","titleWrapper","Typography","onClick","clearBtn","deleteList","makeStyles","theme","display","margin","spacing","padding","flexGrow","fontWeight","fortSize","width","cursor","textTransform","backgroundColor","borderRadius","border","todoId","text","showModal","newText","setNewText","container","Paper","wrapper","CssBaseline","TextareaAutosize","rows","todo","btnsWrapper","Button","saveBtn","editTodo","deleteBtn","deleteTodo","height","background","position","top","left","transform","textAlign","marginTop","color","marginRight","Todo","index","setShowModal","handleClick","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","setOpen","setText","inputWrapper","multiline","placeholder","addBtn","addTodo","IconButton","opacity","AddNew","open","Collapse","in","addNewText","fade","List","todos","droppableId","droppableProps","map","id","state","lists","useStyles","onDragEnd","result","destination","source","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","sort","direction","list","addWrapper","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","newList","newTodo","newState","newTodoState","splice","find","listStart","listEnd","filter","todoIndex","indexOf","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59e140a5.chunk.js","sourcesContent":["export * from './listsActions'\r\nexport * from './todosActions'\r\n\r\nexport const CONSTANTS = {\r\n  ADD_TODO: 'ADD_TODO',\r\n  ADD_LIST: 'ADD_LIST',\r\n  DRAG_OCCURED: 'DRAG_OCCURED',\r\n  EDIT_LIST_TITLE: 'EDIT_LIST_TITLE',\r\n  DELETE_LIST: 'DELETE_LIST',\r\n  EDIT_TODO: 'EDIT_TODO',\r\n  DELETE_TODO: 'DELETE_TODO'\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { editListTitle, deleteList } from '../redux/actions'\r\nimport { Typography, makeStyles, InputBase} from \"@material-ui/core\"\r\nimport ClearIcon from \"@material-ui/icons/Clear\"\r\n\r\nfunction ListTitle({title, listId, dispatch}) {\r\n  const classes = useStyle(),\r\n        [edit, setEdit] = useState(false),\r\n        [newTitle, setNewTitle] = useState(title)\r\n\r\n  const handleTitleChange = () => {\r\n    setEdit(false)\r\n    dispatch(editListTitle(listId, newTitle))\r\n  }\r\n\r\n  const removeList = () => {\r\n    dispatch(deleteList(listId))\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {edit ?\r\n        (\r\n          <InputBase\r\n            value={newTitle}\r\n            onChange={(e) => setNewTitle(e.target.value)}\r\n            onBlur={handleTitleChange}\r\n            inputProps = {{className: classes.input}}\r\n            autoFocus\r\n            fullWidth\r\n          />\r\n        ) : (\r\n          <div className={classes.titleWrapper}>\r\n            <Typography className={classes.title} onClick={() => setEdit(true)}>\r\n              {newTitle}\r\n            </Typography>\r\n            <ClearIcon className={classes.clearBtn} onClick={removeList}/>\r\n          </div>\r\n        )\r\n      }\r\n    </React.Fragment >\r\n  )\r\n}\r\n\r\nexport default connect()(ListTitle)\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontWeight: 'bold',\r\n    fortSize: '1.2rem',\r\n    width: '80%',\r\n    cursor: 'text',\r\n    textTransform: 'capitalize'\r\n  },\r\n  input: {\r\n    fontWeight: 'bold',\r\n    margin: theme.spacing(1, 1, 0, 1),\r\n    padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\r\n    fortSize: '1.2rem',\r\n    '&:focus': {\r\n      backgroundColor: 'white',\r\n      borderRadius: '4px',\r\n      border: '1px solid blue'\r\n    }\r\n  },\r\n  clearBtn: {\r\n    cursor: 'pointer'\r\n  }\r\n}))","import { CONSTANTS } from '../actions/index'\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  }\r\n}\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_OCCURED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type\r\n    }\r\n  }\r\n}\r\n\r\nexport const editListTitle = (listId, newTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listId,\r\n      newTitle\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteList = listId => {\r\n  return {\r\n      type: CONSTANTS.DELETE_LIST,\r\n      payload: {listId}\r\n  }\r\n}\r\n","import { useState } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { editTodo, deleteTodo } from '../redux/actions'\r\nimport { Paper, TextareaAutosize, CssBaseline, Button, makeStyles } from \"@material-ui/core\"\r\n\r\nfunction Modal({ todoId, listId, text, showModal, dispatch }) {\r\nconst [newText, setNewText] = useState(text),\r\n      classes = useStyle()\r\n\r\n  const handleChange = (e) => {\r\n    setNewText(e.target.value)\r\n  }\r\n  \r\n  const handleSave = () => {\r\n    showModal(false)\r\n    dispatch(editTodo(todoId, listId, newText))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    showModal(false)\r\n    dispatch(deleteTodo(todoId, listId))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper className={classes.wrapper}>\r\n        <CssBaseline />\r\n        <TextareaAutosize\r\n          rows={6}\r\n          onChange={handleChange}\r\n          value={newText}\r\n          className={classes.todo}\r\n        />\r\n        <div className={classes.btnsWrapper}>\r\n            <Button className={classes.saveBtn} onClick={handleSave}>Save</Button>\r\n            <Button className={classes.deleteBtn} onClick={handleDelete}>Delete</Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect() (Modal);\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  container: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    background: 'rgba(255, 255, 255, 0.4)',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0'\r\n  },\r\n  wrapper: {\r\n    width: '350px',\r\n    height: '200px',\r\n    padding: '15px',\r\n    backgroundColor: '#E1E5EA',\r\n    margin: theme.spacing(2),\r\n    position: 'absolute',\r\n    top: '30%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n  todo: {\r\n    padding: '10px',\r\n    width: '320px'\r\n  },\r\n  btnsWrapper: {\r\n    textAlign: 'center',\r\n    marginTop: '10px'\r\n  },\r\n  saveBtn: {\r\n    backgroundColor: '#5aac43',\r\n    color: 'white',\r\n    marginRight: '10px'\r\n  },\r\n   deleteBtn: {\r\n    backgroundColor: 'red',\r\n    color: 'white'\r\n  }\r\n}))","import { CONSTANTS } from './index'\r\n\r\nexport const addTodo = (listId, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_TODO,\r\n    payload: { text, listId}\r\n  }\r\n}\r\n\r\nexport const editTodo = (todoId, listId, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_TODO,\r\n    payload: {\r\n      todoId,\r\n      listId,\r\n      newText\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteTodo = (todoId, listId) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_TODO,\r\n    payload: {\r\n      todoId,\r\n      listId\r\n    }\r\n  }\r\n}","import React, { useState } from \"react\"\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport { Paper, makeStyles } from \"@material-ui/core\"\r\nimport Modal from './Modal'\r\n\r\n\r\nexport default function Todo({ text, todoId, index, listId }) {\r\n  const [showModal, setShowModal] = useState(false),\r\n        classes = useStyle()\r\n  \r\n  const handleClick = () => {\r\n    setShowModal(!showModal)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment >\r\n      {showModal ? <Modal text={text} todoId={todoId} listId={listId} showModal={setShowModal} /> : null}\r\n      <Draggable draggableId={String(todoId)} index={index}>\r\n        {provided => (\r\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} onClick={handleClick}>\r\n            <Paper className={classes.todo}>\r\n              {text}\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  todo: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1)\r\n  }\r\n}))\r\n","import { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {addList, addTodo} from '../redux/actions'\r\nimport { Paper, InputBase, makeStyles, Button, IconButton } from \"@material-ui/core\"\r\nimport ClearIcon from \"@material-ui/icons/Clear\"\r\n\r\nfunction CreateNew({ type, setOpen, listId, dispatch }) {\r\n  const classes = useStyle()\r\n\r\n  const [text, setText] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    let value = e.target.value\r\n    setText(value)\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    if (type === 'list' && text) {\r\n      dispatch(addList(text))\r\n    } else if (type === 'to-do' && text) {\r\n      dispatch(addTodo(listId, text))\r\n    } else {\r\n      return\r\n    }\r\n    \r\n    setOpen(false)\r\n    setText('')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.inputWrapper}>\r\n        <InputBase\r\n          value={text}\r\n          autoFocus\r\n          onChange={handleChange}\r\n          multiline\r\n          placeholder={`Enter new ${type}`} />\r\n      </Paper>\r\n      <div className={classes.btnsWrapper}>\r\n        <Button className={classes.addBtn} onClick={handleAdd}>Add {type}</Button>\r\n        <IconButton onClick={() => setOpen(false)}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default connect() (CreateNew);\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  inputWrapper: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1)\r\n  },\r\n  btnsWrapper: {\r\n    margin: theme.spacing(0, 1, 1, 1)\r\n  },\r\n  addBtn: {\r\n    backgroundColor: '#5aac43',\r\n    color: 'white',\r\n    margin: theme.spacing(0, 1, 0, 0),\r\n    '&:hover': {\r\n      backgroundColor: '#5aac43',\r\n      opacity: '.8'\r\n    }\r\n  }\r\n}))\r\n\r\n","import { useState } from \"react\"\r\nimport { Collapse, Paper, Typography, fade, makeStyles } from \"@material-ui/core\"\r\nimport CreateNew from \"./CreateNew\"\r\n\r\nexport default function AddNew({type, listId}) {\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  const classes = useStyle()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Collapse in={open}>\r\n        <CreateNew type={type} setOpen={setOpen} listId={listId}/>\r\n      </Collapse>\r\n      <Collapse in={!open}>\r\n        <Paper className={classes.addNewText} onClick={() => setOpen(true)}>\r\n          <Typography>+ Add a {type}</Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  container: {\r\n    width: '280px',\r\n    marginTop: theme.spacing(1),\r\n    cursor:'pointer'\r\n  },\r\n  addNewText: {\r\n    padding: theme.spacing(0.5),\r\n    margin: theme.spacing(1),\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: fade('#000', 0.1)\r\n    }\r\n  }\r\n}))","import { Droppable, Draggable } from \"react-beautiful-dnd\"\r\nimport { Paper, CssBaseline, makeStyles } from \"@material-ui/core\"\r\nimport ListTitle from \"./ListTitle\"\r\nimport Todo from \"./Todo\"\r\nimport AddNew from \"./AddNew\"\r\n\r\n\r\nexport default function List({ title, listId, todos, index }) {\r\n  const classes = useStyle()\r\n\r\n  return (\r\n    <Draggable draggableId={listId} index={index}>\r\n      {provided => (\r\n        <div ref={provided.innerRef} {...provided.dragHandleProps} {...provided.draggableProps}>\r\n          <Droppable droppableId={String(listId)}>\r\n            {provided => (\r\n              <div  className={classes.container} {...provided.droppableProps} ref={provided.innerRef}>\r\n                <Paper className={classes.wrapper}>\r\n                  <CssBaseline />\r\n                  <ListTitle title={title} listId={listId}/>\r\n                  {todos?.map((todo, index) => {\r\n                    return (\r\n                      <Todo key={todo.id} text={todo.text} todoId={todo.id} listId={listId} index={index} />\r\n                    )\r\n                  })}\r\n                  {provided.placeholder}\r\n                  <AddNew type='to-do' listId={listId} />\r\n                </Paper>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  container: {\r\n   height: '100%'\r\n  },\r\n  wrapper: {\r\n    width: '280px',\r\n    backgroundColor: '#E1E5EA',\r\n    margin: theme.spacing(2),\r\n  },\r\n}))","import { connect } from \"react-redux\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { sort } from '../redux/actions'\nimport { makeStyles } from \"@material-ui/core\"\nimport List from \"./List\"\nimport AddNew from \"./AddNew\"\n\n\nfunction App({lists, dispatch}) {\n  const classes = useStyles()\n\n  const onDragEnd = (result) => {\n    const{ destination, source, draggableId, type } = result\n    \n    if (!destination) {\n      return\n    }\n\n    dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ))\n\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className={classes.container}>\n        <Droppable droppableId='lists' direction='horizontal' type='list'>\n          {provided => (\n            <div className={classes.wrapper} {...provided.droppableProps} ref={provided.innerRef}>\n              {lists.map((list, index) => {\n                return (\n                  <List key={list.id} title={list.title} todos={list.todos} listId={list.id} index={index}/>\n                )\n              })}\n              {provided.placeholder}\n              <div className={classes.addWrapper}>\n                <AddNew type='list'/>\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext> \n  );\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps) (App);\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: '100vh',\n    overflow: 'auto',\n    backgroundColor: '#1EAE98'\n  },\n  wrapper: {\n    display: 'flex'\n  },\n\n}))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CONSTANTS} from '../actions'\r\n\r\nlet listId = 2, todoId = 5\r\n\r\nconst initialState = [\r\n  {\r\n    title: 'To Do',\r\n    id: `list${0}`,\r\n    todos: [\r\n      {\r\n        id: `todo${0}`,\r\n        text: 'Create README file'\r\n      },\r\n      {\r\n        id: `todo${1}`,\r\n        text: 'Push updated code to the respository'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'In process',\r\n    id: `list${1}`,\r\n    todos: [\r\n      {\r\n        id: `todo${2}`,\r\n        text: 'Create new component'\r\n      },\r\n      {\r\n        id:  `todo${3}`,\r\n        text: 'Implement Redux'\r\n      },\r\n       {\r\n        id:  `todo${4}`,\r\n        text: 'Refactor the code'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const newList = {\r\n        title: action.payload,\r\n        id: `list${listId}`,\r\n        todos: [],\r\n      }\r\n      listId += 1\r\n      return [...state, newList]\r\n    }\r\n      \r\n    case CONSTANTS.ADD_TODO: {\r\n      const newTodo = {\r\n        text: action.payload.text,\r\n        id: `todo${todoId}`,\r\n      }\r\n      todoId += 1\r\n\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            todos: [...list.todos, newTodo]\r\n          }\r\n        } else {\r\n          return list\r\n        }\r\n      })\r\n\r\n      return newState\r\n    }\r\n      \r\n    case CONSTANTS.DRAG_OCCURED: {\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        type\r\n      } = action.payload\r\n\r\n      const newTodoState = [...state]\r\n\r\n      if (type === 'list') {\r\n        const list = newTodoState.splice(droppableIndexStart, 1)\r\n        newTodoState.splice(droppableIndexEnd, 0, ...list)\r\n\r\n        return newTodoState\r\n      }\r\n\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id),\r\n              todo = list.todos.splice(droppableIndexStart, 1)\r\n        \r\n        list.todos.splice(droppableIndexEnd, 0, ...todo)\r\n      }\r\n\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        const listStart = state.find(list => droppableIdStart === list.id),\r\n              todo = listStart.todos.splice(droppableIndexStart, 1),\r\n              listEnd = state.find(list => droppableIdEnd === list.id)\r\n\r\n        listEnd.todos.splice(droppableIndexEnd, 0, ...todo)\r\n      }\r\n\r\n      return newTodoState\r\n    }\r\n      \r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listId, newTitle } = action.payload,\r\n             list = state.find(list => list.id === listId)\r\n\r\n      list.title = newTitle\r\n\r\n      return [...state]\r\n    }\r\n      \r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listId } = action.payload\r\n      return  state.filter(list => list.id !== listId)\r\n    }\r\n      \r\n    case CONSTANTS.EDIT_TODO: {\r\n      const { todoId, listId, newText } = action.payload,\r\n        list = state.find(list => list.id === listId),\r\n        todo = list.todos.find(todo => todo.id === todoId)\r\n        todo.text = newText\r\n\r\n      return [...state]\r\n    }\r\n      \r\n    case CONSTANTS.DELETE_TODO: {\r\n      const { todoId, listId } = action.payload,\r\n        list = state.find(list => list.id === listId),\r\n        todo = list.todos.find(todo => todo.id === todoId),\r\n        todoIndex = list.todos.indexOf(todo)\r\n\r\n        list.todos.splice(todoIndex, 1)\r\n\r\n      return [...state]\r\n    }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n  \r\n}\r\n\r\nexport default reducer","import { combineReducers } from \"redux\"\r\nimport reducer from \"./reducer\"\r\n\r\nexport default combineReducers({\r\n  lists: reducer\r\n})","import { createStore } from \"redux\"\r\nimport rootReducer from '../reducers/index'\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport  store from './redux/store/index'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}